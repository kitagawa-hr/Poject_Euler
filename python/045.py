"""
Project Euler Problem 45
========================

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle     T[n]=n(n+1)/2   1, 3, 6, 10, 15, ...
Pentagonal   P[n]=n(3n-1)/2  1, 5, 12, 22, 35, ...
Hexagonal    H[n]=n(2n-1)    1, 6, 15, 28, 45, ...

It can be verified that T[285] = P[165] = H[143] = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

import math
from itertools import count

from functions import is_square


def gen_triangle():
    for n in count(286):
        yield int((n * (n + 1)) / 2)


def is_hexagon(x):
    """
    >>> is_hexagon(1)
    True
    >>> is_hexagon(6)
    True
    >>> is_hexagon(15)
    True
    >>> is_hexagon(28)
    True
    >>> is_hexagon(41)
    False
    """
    if x < 1:
        return False
    if is_square(1 + 8 * x):
        if (math.sqrt(1 + 8 * x)) % 4 == 3:
            return True
    return False


def is_pentagon(x):
    """
    >>> is_pentagon(1)
    True
    >>> is_pentagon(5)
    True
    >>> is_pentagon(12)
    True
    >>> is_pentagon(22)
    True
    >>> is_pentagon(15)
    False
    """
    if x < 1:
        return False
    if is_square(1 + 24 * x):
        if int(math.sqrt(1 + 24 * x)) % 6 == 5:
            return True
    return False

def main():
    gen = gen_triangle()
    while True:
        tri = next(gen)
        if is_hexagon(tri) and is_pentagon(tri):
            print(tri)
            break
    return

if __name__ == '__main__':
    main()
