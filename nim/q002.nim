discard """
Project Euler Problem 2
=======================

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed four million.
"""

import system, macros, algorithm, tables, sets, lists, queues, intsets, critbits, sequtils, strutils, math, future


proc fibo(n: int): int =
    if n == 1 or n == 2:
        return n
    return fibo(n - 1) + fibo(n - 2)


var
    MAX = 4000000
    n = 1
    fibo_list: seq[int] = @[]
while fibo(n) <= MAX:
    fibo_list.add(fibo(n))
    inc(n)
var ans = sum(lc[x | (x <- fibo_list, x mod 2 == 0), int])
echo(ans)
